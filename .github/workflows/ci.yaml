name: CI

on: [push, pull_request]
jobs:
  test_musl_gcc:
    name: "Test with GCC/musl/libstdc++/BFD on Alpine Linux"
    runs-on: ubuntu-latest
    container: alpine:edge
    steps:
    - run: apk --no-cache add git gcc g++ binutils pkgconf meson ninja musl-dev wayland-dev wayland-protocols libinput-dev libevdev-dev libxkbcommon-dev pixman-dev glm-dev libdrm-dev mesa-dev cairo-dev eudev-dev libxml2-dev libexecinfo-dev libseat-dev libxcb-dev xcb-util-wm-dev xwayland doctest doctest-dev cmake
    - uses: actions/checkout@v1
    - run: git submodule sync --recursive && git submodule update --init --force --recursive
    - run: meson build -Dtests=enabled
    - run: ninja -v -Cbuild
    - run: ninja -v -Cbuild test
  test_glibc_llvm:
    name: "Test with clang/glibc/libc++/lld on Arch Linux"
    runs-on: ubuntu-latest
    container:
        image: archlinux:latest
    steps:
    - run: pacman --noconfirm --noprogressbar -Syyu
    - run: pacman --noconfirm --noprogressbar -Sy git clang lld libc++ pkgconf meson ninja wayland wayland-protocols libinput libxkbcommon pixman glm libdrm libglvnd cairo

      # Build seatd from AUR
    - run: git clone https://aur.archlinux.org/seatd.git
    - run: useradd makepkgtest
    - run: (cd seatd && chown makepkgtest:root . && su makepkgtest -c "makepkg --printsrcinfo" > .SRCINFO)
    - uses: edlanglois/pkgbuild-action@v1
      id: makepkg
      with:
          pkgdir: "seatd"
    - run: pacman --noconfirm -U ${{ steps.makepkg.outputs.pkgfile0 }}
    - run: rm -rf seatd # Cleanup current dir

      # Build Wayfire
    - uses: actions/checkout@v1
    - run: git submodule sync --recursive && git submodule update --init --force --recursive
    - run: env CC=clang CXX=clang++ CXXFLAGS="-stdlib=libc++" LDFLAGS="-fuse-ld=lld -stdlib=libc++" meson build
    - run: ninja -v -Cbuild
    - run: ninja -v -Cbuild test
    - run: /usr/share/clang/run-clang-tidy.py -p build -quiet "^$PWD/"'(src|plugins)/.*'
  test_code_style:
    name: "Check code style with uncrustify"
    runs-on: ubuntu-latest
    steps:
        - run: sudo apt-get update
        - run: sudo apt-get install -y git cmake gcc make
        - uses: actions/checkout@v1
        - run: git clone http://github.com/ammen99/uncrustify
        - run: cd uncrustify && mkdir build && cd build && cmake ../ && make && cd ../../
        - run: git ls-files | grep "hpp$\|cpp$" | xargs ./uncrustify/build/uncrustify -c uncrustify.ini --check
